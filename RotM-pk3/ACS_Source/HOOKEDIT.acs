#library "HookEdit"
#include "zcommon.acs"

//This spawns the sprite
Script "core_drawhookshot2" (int playerTid, int density) CLIENTSIDE
{
    int plX; int plY;  int plZ;
    int grX; int grY;  int grZ;
    int vX;  int vY;   int vZ;
    int nX;  int nY;   int nZ;
    int bX;  int bY;   int bZ;
    int magnitude;
    int pointCount;
    int pointOffset;
	
	while(ClassifyActor(0) && GetActorProperty(playerTid, APROP_HEALTH)>0){

    plX = GetActorX(playerTid); grX = GetActorX(0);
    plY = GetActorY(playerTid); grY  = GetActorY(0);
    plZ = GetActorZ(playerTid)+(28 << 16); grZ  = GetActorZ(0);
//+28 to the spawn height of the ^player so the chain doesn't spawn from their feet.
    vX = grX - plX;   vY = grY - plY;   vZ = grZ - plZ;

    magnitude = magnitudeThree(vX >> 16, vY >> 16, vZ >> 16);

    pointCount  = magnitude / density;
    pointOffset = magnitude - (pointCount * density);

	str SpawnName = "WireAdaptorHookFX";
	
	if(grX == 0 && grY == 0 && grZ == 0){terminate;} 

    if (magnitude != 0)
    {
        nX = vX / magnitude; nY = vY / magnitude; nZ = vZ / magnitude;

        int i; int j;
        for (i = 0; i < pointCount; i++)
        {
            j = (i * density) + pointOffset;

            bX = (nX * j) + plX;
            bY = (nY * j) + plY;
            bZ = (nZ * j) + plZ;// +(16 << 16);

			if(i>0){
			//Spawn(SpawnName, bX, bY, bZ);
			SpawnTrans(SpawnName, bX, bY, bZ);
			}
		
        }
    }				
			

			Delay(1);
			
			}
}

// Hookshot
function int magnitudeThree(int x, int y, int z)
{
    return sqrt8(x*x + y*y + z*z);
}

// sqrt and distance functions from ZDoom wiki
function int sqrt8(int number)
{
	if(number <= 3)
	{
		if(number > 0)
		{
			return 1;
		}
		return 0;
	}

	int oldAns = number >> 1,                     // initial guess
	    newAns = (oldAns + number / oldAns) >> 1; // first iteration

	// main iterative method
	while(newAns < oldAns)
	{
		oldAns = newAns;
		newAns = (oldAns + number / oldAns) >> 1;
	}

	return oldAns;
}

function void SpawnTrans(str classname, int x, int y, int z)
{
	int u = UniqueTID();
	
	Spawn(classname, x, y, z, u);
	
	Thing_SetTranslation(u, -1);
	
	Thing_ChangeTID(u,0);
}